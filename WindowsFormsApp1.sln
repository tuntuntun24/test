using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        XmlDocument doc = new XmlDocument();
        string tentep = @"C:\Users\fptsh\Downloads\OneDrive\Desktop\Tích hợp\WindowsFormsApp1\WindowsFormsApp1\nhanvien.xml";
        int d;
        private void HienThi()
        {
            datanhanvien.Rows.Clear();
            doc.Load(tentep);
            XmlNodeList DS = doc.SelectNodes("/ds/nhanvien");
            int sd = 0;
            datanhanvien.ColumnCount = 4;
            datanhanvien.Rows.Add();
            foreach (XmlNode nhanvien in DS)
            {
                XmlNode manv = nhanvien.SelectSingleNode("@manv");
                datanhanvien.Rows[sd].Cells[0].Value = manv.InnerText.ToString();
                XmlNode ho = nhanvien.SelectSingleNode("hoten/ho");
                datanhanvien.Rows[sd].Cells[1].Value = ho.InnerText.ToString();
                XmlNode ten = nhanvien.SelectSingleNode("hoten/ten");
                datanhanvien.Rows[sd].Cells[2].Value = ten.InnerText.ToString();
                XmlNode diachi = nhanvien.SelectSingleNode("diachi");
                datanhanvien.Rows[sd].Cells[3].Value = diachi.InnerText.ToString();
                datanhanvien.Rows.Add();
                sd++;
            }
        }
        private void Form1_Load(object sender, EventArgs e)
        {
            HienThi();
        }

        private void them_Click(object sender, EventArgs e)
        {
            doc.Load(tentep);
            XmlElement goc = doc.DocumentElement;

            XmlNode existingStudent = goc.SelectSingleNode("/ds/nhanvien[@manv='" + txt_manv.Text + "']");
            if (existingStudent != null)
            {
                MessageBox.Show("Sinh viên đã có mã sinh viên này.");
            }
            else
            {
                XmlNode nhanvien = doc.CreateElement("nhanvien");

                XmlAttribute manv = doc.CreateAttribute("manv");
                manv.InnerText = txt_manv.Text;
                nhanvien.Attributes.Append(manv);

                XmlNode hoten = doc.CreateElement("hoten");
                nhanvien.AppendChild(hoten);

                XmlNode ho = doc.CreateElement("ho");
                ho.InnerText = txt_ho.Text;
                hoten.AppendChild(ho);

                XmlNode ten = doc.CreateElement("ten");
                ten.InnerText = txt_ten.Text;
                hoten.AppendChild(ten);

                XmlNode diachi = doc.CreateElement("diachi");
                diachi.InnerText = txt_diachi.Text;
                nhanvien.AppendChild(diachi);

                goc.AppendChild(nhanvien);
                doc.Save(tentep);
                HienThi();
            }
        }

        private void xoa_Click(object sender, EventArgs e)
        {
            DialogResult result = MessageBox.Show("Bạn có chắc chắn muốn xóa nhân viên này không?", "Xác nhận xóa", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes) 
            {
                doc.Load(tentep);
                XmlElement goc = doc.DocumentElement;
                XmlNode nvxoa = goc.SelectSingleNode("/ds/nhanvien[@manv='" + txt_manv.Text + "']");
                goc.RemoveChild(nvxoa);
                doc.Save(tentep);
                HienThi();
            }
        }

        private void sua_Click(object sender, EventArgs e)
        {
            doc.Load(tentep);
            XmlElement goc = doc.DocumentElement;
            XmlNode nvcu = goc.SelectSingleNode("/ds/nhanvien[@manv='" + txt_manv.Text + "']");
            XmlNode nvmoi = doc.CreateElement("nhanvien");

            XmlAttribute manv = doc.CreateAttribute("manv");
            manv.InnerText = txt_manv.Text;
            nvmoi.Attributes.Append(manv);

            XmlNode hoten = doc.CreateElement("hoten");
            nvmoi.AppendChild(hoten);

            XmlNode ho = doc.CreateElement("ho");
            ho.InnerText = txt_ho.Text;
            hoten.AppendChild(ho);

            XmlNode ten = doc.CreateElement("ten");
            ten.InnerText = txt_ten.Text;
            hoten.AppendChild(ten);

            XmlNode diachi = doc.CreateElement("diachi");
            diachi.InnerText = txt_diachi.Text;
            nvmoi.AppendChild(diachi);

            goc.ReplaceChild(nvmoi, nvcu);
            doc.Save(tentep);
            HienThi();
        }
        private void datanhanvien_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            d = e.RowIndex;
            txt_manv.Text = datanhanvien.Rows[d].Cells[0].Value.ToString();
            txt_ho.Text = datanhanvien.Rows[d].Cells[1].Value.ToString();
            txt_ten.Text = datanhanvien.Rows[d].Cells[2].Value.ToString();
            txt_diachi.Text = datanhanvien.Rows[d].Cells[3].Value.ToString();
        }

        private void timId_Click(object sender, EventArgs e)
        {
            datanhanvien.Rows.Clear();
            doc.Load(tentep);
            XmlElement goc = doc.DocumentElement;
            XmlNodeList nvtimList = goc.SelectNodes("/ds/nhanvien[@manv='" + txt_manv.Text + "']");

            if (nvtimList != null && nvtimList.Count > 0)
            {
                datanhanvien.ColumnCount = 4;
                int sd = 0;
                foreach (XmlNode nvtim in nvtimList)
                {
                    datanhanvien.Rows.Add();

                    XmlNode manv = nvtim.SelectSingleNode("@manv");
                    datanhanvien.Rows[sd].Cells[0].Value = manv?.InnerText.ToString();

                    XmlNode ho = nvtim.SelectSingleNode("hoten/ho");
                    datanhanvien.Rows[sd].Cells[1].Value = ho?.InnerText.ToString();

                    XmlNode ten = nvtim.SelectSingleNode("hoten/ten");
                    datanhanvien.Rows[sd].Cells[2].Value = ten?.InnerText.ToString();

                    XmlNode diachi = nvtim.SelectSingleNode("diachi");
                    datanhanvien.Rows[sd].Cells[3].Value = diachi?.InnerText.ToString();
                    sd++;
                }
            }
            else { MessageBox.Show("Không tìm thấy sinh viên với mã này."); }
        }

        private void timTen_Click(object sender, EventArgs e)
        {
            datanhanvien.Rows.Clear();
            doc.Load(tentep);
            XmlElement goc = doc.DocumentElement;
            XmlNodeList nvtimList = goc.SelectNodes("/ds/nhanvien[hoten/ten='" + txt_ten.Text + "']");
            datanhanvien.ColumnCount = 4;
            int sd = 0;
            foreach (XmlNode nvtim in nvtimList)
            {
                datanhanvien.Rows.Add();

                XmlNode manv = nvtim.SelectSingleNode("@manv");
                datanhanvien.Rows[sd].Cells[0].Value = manv?.InnerText.ToString();

                XmlNode ho = nvtim.SelectSingleNode("hoten/ho");
                datanhanvien.Rows[sd].Cells[1].Value = ho?.InnerText.ToString();

                XmlNode ten = nvtim.SelectSingleNode("hoten/ten");
                datanhanvien.Rows[sd].Cells[2].Value = ten?.InnerText.ToString();

                XmlNode diachi = nvtim.SelectSingleNode("diachi");
                datanhanvien.Rows[sd].Cells[3].Value = diachi?.InnerText.ToString();
                sd++;
            }
        }
    }
}
